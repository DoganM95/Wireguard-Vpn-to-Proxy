name: Unified Docker Build for GHCR

on:
    push:
        paths-ignore:
            - "README.md" # Ignore changes to README.md
            - rn.sh
            - run.ps1
        branches-ignore:
            - "*dependabot*" # Ignore branches containing "dependabot"

jobs:
    build-and-push-to-ghcr:
        runs-on: ubuntu-latest
        permissions:
            packages: write
            contents: read

        steps:
            - name: Check out the repo
              uses: actions/checkout@v4

            - name: Log in to the container registry
              uses: docker/login-action@v3
              with:
                  registry: ghcr.io
                  username: ${{ github.actor }}
                  password: ${{ secrets.GITHUB_TOKEN }}

            - name: Set tag suffix based on branch
              run: |
                  if [[ "${{ github.ref }}" == "refs/heads/master" ]]; then
                    echo "TAG_SUFFIX=" >> $GITHUB_ENV
                  elif [[ "${{ github.ref }}" == "refs/heads/main" ]]; then
                    echo "TAG_SUFFIX=" >> $GITHUB_ENV
                  else
                    echo "TAG_SUFFIX=-dev" >> $GITHUB_ENV
                  fi

            - name: Set up Docker Buildx
              uses: docker/setup-buildx-action@v3

            - name: Build and push docker images (multi-arch)
              uses: docker/build-push-action@v5
              with:
                  context: ./split-tunnelled
                  push: true
                  platforms: linux/amd64,linux/arm64,linux/arm/v7,linux/arm/v6
                  tags: |
                      ghcr.io/doganm95/wireguard-vpn-proxy-st${{ env.TAG_SUFFIX }}:v${{ github.run_number }}
                      ghcr.io/doganm95/wireguard-vpn-proxy-st${{ env.TAG_SUFFIX }}:${{ github.sha }}
                      ghcr.io/doganm95/wireguard-vpn-proxy-st${{ env.TAG_SUFFIX }}:latest
                  labels: |
                      org.opencontainers.image.source=${{ github.repository_url }}
                      org.opencontainers.image.revision=${{ github.sha }}
